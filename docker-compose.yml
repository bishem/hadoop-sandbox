version: "sandbox"

services:
  playground:
    image: playground:sandbox
    hostname: playground
    container_name: playground
    command: [ "java", "-jar", "/target/playground.jar" ]
    ports:
      - 3141:8080
    environment:
      SPRING_PROFILES_ACTIVE: web
    volumes:
      - ./playground/target:/target

  namenode:
    image: hadoop:sandbox
    hostname: namenode
    container_name: namenode
    command: [ "/opt/hadoop/start-namenode.sh" ]
    ports:
      - 9870:9870
      - 8020:8020
    environment:
      ENSURE_NAMENODE_DIR: "/opt/hadoop/dfs/name"
      ENSURE_NAMENODE_CLUSTERID: "sandbox"
    env_file:
      - ./config
    volumes:
      - namenode:/opt/hadoop/dfs/name

  datanode-one:
    image: hadoop:sandbox
    hostname: datanode-one
    container_name: datanode-one
    command: [ "hdfs", "datanode" ]
    ports:
      - 9864:9864
    env_file:
      - ./config
    volumes:
      - datanode-one:/opt/hadoop/dfs/data

  datanode-two:
    image: hadoop:sandbox
    hostname: datanode-two
    container_name: datanode-two
    command: [ "hdfs", "datanode" ]
    ports:
      - 9865:9864
    env_file:
      - ./config
    volumes:
      - datanode-two:/opt/hadoop/dfs/data

  datanode-three:
    image: hadoop:sandbox
    hostname: datanode-three
    container_name: datanode-three
    command: [ "hdfs", "datanode" ]
    ports:
      - 9866:9864
    env_file:
      - ./config
    volumes:
      - datanode-three:/opt/hadoop/dfs/data

  resourcemanager:
    image: hadoop:sandbox
    hostname: resourcemanager
    container_name: resourcemanager
    command: [ "yarn", "resourcemanager" ]
    ports:
      - 8088:8088
    env_file:
      - ./config
    volumes:
      - ./output:/opt/hadoop/output
      - ./samples:/opt/hadoop/samples
      - ./playground/target:/opt/hadoop/archives

  nodemanager:
    image: hadoop:sandbox
    hostname: nodemanager
    container_name: nodemanager
    command: [ "yarn", "nodemanager" ]
    env_file:
      - ./config

  timelineserver:
    image: hadoop:sandbox
    hostname: timelineserver
    container_name: timelineserver
    command: [ "yarn", "timelineserver" ]
    env_file:
      - ./config
    volumes:
      - timelineserver:/opt/hadoop/yarn/timeline
      
  zoo-one:
    image: zookeeper:sandbox
    restart: unless-stopped
    hostname: zoo-one
    container_name: zoo-one
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo-one:2888:3888;2181 server.2=zoo-two:2888:3888;2181 server.3=zoo-three:2888:3888;2181
      ZOO_DATA_LOG_DIR: /data/log
    volumes:
      - zoo-one:/data

  zoo-two:
    image: zookeeper:sandbox
    restart: unless-stopped
    hostname: zoo-two
    container_name: zoo-two
    ports:
      - 2182:2181
      - 2889:2888
      - 3889:3888
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo-one:2888:3888;2181 server.2=zoo-two:2888:3888;2181 server.3=zoo-three:2888:3888;2181
      ZOO_DATA_LOG_DIR: /data/log
    volumes:
      - zoo-two:/data

  zoo-three:
    image: zookeeper:sandbox
    restart: unless-stopped
    hostname: zoo-three
    container_name: zoo-three
    ports:
      - 2183:2181
      - 2890:2888
      - 3890:3888
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo-one:2888:3888;2181 server.2=zoo-two:2888:3888;2181 server.3=zoo-three:2888:3888;2181
      ZOO_DATA_LOG_DIR: /data/log
    volumes:
      - zoo-three:/data

  hbase-master:
    image: hbase:sandbox
    hostname: hbase-master
    container_name: hbase-master
    depends_on:
      - zoo-one
      - zoo-two
      - zoo-three
    command: [ "hbase", "master", "start" ]
    ports:
      - 16000:16000
      - 16010:16010

  hbase-region:
    image: hbase:sandbox
    hostname: hbase-region
    container_name: hbase-region
    depends_on:
      - hbase-master
    command: [ "hbase", "regionserver", "start" ]
    ports:
      - 16020:16020
      - 16030:16030

volumes:
  namenode:
  timelineserver:
  datanode-one:
  datanode-two:
  datanode-three:
  zoo-one:
  zoo-two:
  zoo-three:
