version: "test"

services:
  namenode:
    image: sandbox/hadoop:latest
    hostname: namenode
    container_name: namenode
    command: ["hdfs", "namenode"]
    ports:
      - 9870:9870
    env_file:
      - ./config
    environment:
      ENSURE_NAMENODE_DIR: "enforce-format" # hadoop runner only formats namenode if the directory doesn't exist
    volumes:
      - namenode:/opt/hadoop/dfs/name

  datanode-one:
    image: sandbox/hadoop:latest
    hostname: datanode-one
    container_name: datanode-one
    command: ["hdfs", "datanode"]
    env_file:
      - ./config
    volumes:
      - datanode-one:/opt/hadoop/dfs/data

  datanode-two:
    image: sandbox/hadoop:latest
    hostname: datanode-two
    container_name: datanode-two
    command: ["hdfs", "datanode"]
    env_file:
      - ./config
    volumes:
      - datanode-two:/opt/hadoop/dfs/data

  datanode-three:
    image: sandbox/hadoop:latest
    hostname: datanode-three
    container_name: datanode-three
    command: ["hdfs", "datanode"]
    env_file:
      - ./config
    volumes:
      - datanode-three:/opt/hadoop/dfs/data

  resourcemanager:
    image: sandbox/hadoop:latest
    hostname: resourcemanager
    container_name: resourcemanager
    command: ["yarn", "resourcemanager"]
    ports:
      - 8088:8088
    env_file:
      - ./config
    volumes:
      - ./scripts:/opt/hadoop/scripts
      - ./samples:/opt/hadoop/samples
      - ./playground/target/playground.jar:/opt/hadoop/jars/playground.jar

  nodemanager:
    image: sandbox/hadoop:latest
    hostname: nodemanager
    container_name: nodemanager
    command: ["yarn", "nodemanager"]
    env_file:
      - ./config

  timelineserver:
    image: sandbox/hadoop:latest
    hostname: timelineserver
    container_name: timelineserver
    command: ["yarn", "timelineserver"]
    env_file:
      - ./config
    volumes:
      - timelineserver:/opt/hadoop/yarn/timeline

volumes:
  namenode:
  datanode-one:
  datanode-two:
  datanode-three:
  timelineserver: