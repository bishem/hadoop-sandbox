version: "test"

services:
  namenode:
    image: sandbox/hadoop:latest
    hostname: namenode
    container_name: namenode
    command: ["hdfs", "namenode"]
    ports:
      - 9870:9870
    env_file:
      - ./config
    environment:
      ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"
    # volumes:
      # - namenode:/tmp/hadoop-hadoop/dfs/name

  datanode-one:
    image: sandbox/hadoop:latest
    hostname: datanode-one
    container_name: datanode-one
    command: ["hdfs", "datanode"]
    env_file:
      - ./config
    # volumes:
      # - datanode-one:/tmp/hadoop-hadoop/dfs/data

  datanode-two:
    image: sandbox/hadoop:latest
    hostname: datanode-two
    container_name: datanode-two
    command: ["hdfs", "datanode"]
    env_file:
      - ./config
    # volumes:
      # - datanode-two:/tmp/hadoop-hadoop/dfs/data

  datanode-three:
    image: sandbox/hadoop:latest
    hostname: datanode-three
    container_name: datanode-three
    command: ["hdfs", "datanode"]
    env_file:
      - ./config
    # volumes:
      # - datanode-three:/tmp/hadoop-hadoop/dfs/data

  resourcemanager:
    image: sandbox/hadoop:latest
    hostname: resourcemanager
    container_name: resourcemanager
    command: ["yarn", "resourcemanager"]
    ports:
      - 8088:8088
    env_file:
      - ./config
    # volumes:
      # - ./test.sh:/opt/test.sh

  nodemanager:
    image: sandbox/hadoop:latest
    hostname: nodemanager
    container_name: nodemanager
    command: ["yarn", "nodemanager"]
    env_file:
      - ./config

  timelineserver:
    image: sandbox/hadoop:latest
    hostname: timelineserver
    container_name: timelineserver
    command: ["yarn", "timelineserver"]
    env_file:
      - ./config

# volumes:
  # namenode:
  # datanode-one:
  # datanode-two:
  # datanode-three: