version: "test"

services:
  playground:
    image: playground/hadoop:latest
    hostname: playground
    container_name: playground
    ports:
      - 3141:8080
    environment:
      - SPRING_PROFILES_ACTIVE=web
    volumes:
      - ./playground/target/playground.jar:/playground.jar
      - ./output:/output

  namenode:
    image: sandbox/hadoop:latest
    hostname: namenode
    container_name: namenode
    command: [ "hdfs", "namenode" ]
    ports:
      - 9870:9870
      - 8020:8020 # required to acces hdfs from the host
    env_file:
      - ./config
    environment:
      ENSURE_NAMENODE_DIR: "/opt/hadoop/dfs/name" # required to set cluster id with ENSURE_NAMENODE_CLUSTERID
      # ENSURE_NAMENODE_DIR: "enforce-format" # use ONLY when CREATING container's volumes, will format namenode
      ENSURE_NAMENODE_CLUSTERID: "sandbox" # ensures that datanodes will join previously joined cluster
    volumes:
      - namenode:/opt/hadoop/dfs/name

  datanode-one:
    image: sandbox/hadoop:latest
    hostname: datanode-one
    container_name: datanode-one
    command: [ "hdfs", "datanode" ]
    ports:
      - 9864:9864
    env_file:
      - ./config
    volumes:
      - datanode-one:/opt/hadoop/dfs/data

  datanode-two:
    image: sandbox/hadoop:latest
    hostname: datanode-two
    container_name: datanode-two
    command: [ "hdfs", "datanode" ]
    ports:
      - 9865:9864
    env_file:
      - ./config
    volumes:
      - datanode-two:/opt/hadoop/dfs/data

  datanode-three:
    image: sandbox/hadoop:latest
    hostname: datanode-three
    container_name: datanode-three
    command: [ "hdfs", "datanode" ]
    ports:
      - 9866:9864
    env_file:
      - ./config
    volumes:
      - datanode-three:/opt/hadoop/dfs/data

  resourcemanager:
    image: sandbox/hadoop:latest
    hostname: resourcemanager
    container_name: resourcemanager
    command: [ "yarn", "resourcemanager" ]
    ports:
      - 8088:8088
    env_file:
      - ./config
    volumes:
      - ./scripts:/opt/hadoop/scripts
      - ./samples:/opt/hadoop/samples
      - ./playground/target/playground.jar:/opt/hadoop/jars/playground.jar

  nodemanager:
    image: sandbox/hadoop:latest
    hostname: nodemanager
    container_name: nodemanager
    command: [ "yarn", "nodemanager" ]
    env_file:
      - ./config

  timelineserver:
    image: sandbox/hadoop:latest
    hostname: timelineserver
    container_name: timelineserver
    command: [ "yarn", "timelineserver" ]
    env_file:
      - ./config
    volumes:
      - timelineserver:/opt/hadoop/yarn/timeline

  zoo-master:
    image: zookeeper:latest
    restart: always
    hostname: zoo-master
    container_name: zoo-master
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo-master:2888:3888;2181 server.2=zoo-fallback:2888:3888;2181 server.3=zoo-slave:2888:3888;2181
    volumes:
      - zoo-master:/data

  zoo-fallback:
    image: zookeeper:latest
    restart: always
    hostname: zoo-fallback
    container_name: zoo-fallback
    depends_on:
      - zoo-master
    ports:
      - 2182:2181
      - 2889:2888
      - 3889:3888
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo-master:2888:3888;2181 server.2=zoo-fallback:2888:3888;2181 server.3=zoo-slave:2888:3888;2181
    volumes:
      - zoo-fallback:/data

  zoo-slave:
    image: zookeeper:latest
    restart: always
    hostname: zoo-slave
    container_name: zoo-slave
    depends_on:
      - zoo-fallback
    ports:
      - 2183:2181
      - 2890:2888
      - 3890:3888
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo-master:2888:3888;2181 server.2=zoo-fallback:2888:3888;2181 server.3=zoo-slave:2888:3888;2181
    volumes:
      - zoo-slave:/data

  hbase-master:
    image: sandbox/hbase:latest
    hostname: hbase-master
    container_name: hbase-master
    depends_on:
      - zoo-master
      - zoo-fallback
      - zoo-slave
    command: [ "hbase", "master", "start" ]
    ports:
      - 16000:16000
      - 16010:16010

  hbase-region:
    image: sandbox/hbase:latest
    hostname: hbase-region
    container_name: hbase-region
    depends_on:
      - hbase-master
    command: [ "hbase", "regionserver", "start" ]
    ports:
      - 16020:16020
      - 16030:16030
    env_file:
      - ./config

volumes:
  namenode:
  datanode-one:
  datanode-two:
  datanode-three:
  timelineserver:
  zoo-master:
  zoo-fallback:
  zoo-slave:
